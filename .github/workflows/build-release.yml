name: build
on:
  push:
    branches: ["master"]
    tags: ["*"]
  pull_request:
  # Run builds nightly to catch incompatibilities with new marshmallow releases
  schedule:
    - cron: "0 0 * * *"
jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: "3.8", python: "3.8", tox: py38 }
          - { name: "lowest", python: "3.8", tox: py38-lowest }
          - { name: "3.12-apispecdev", python: "3.12", tox: py312-apispecdev }
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-python@v4.3.0
        with:
          python-version: ${{ matrix.python }}
      - run: python -m pip install --upgrade pip
      - run: python -m pip install tox
      - run: python -m tox -e ${{ matrix.tox }}

  lint-pre-release:
    name: lint
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-python@v4.3.0
        with:
          python-version: "3.11"
      - run: python -m pip install --upgrade pip
      - run: python -m pip install tox
      - run: python -m tox -e lint
  release:
    needs: [tests, lint-pre-release]
    name: PyPI release
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-python@v4.3.0
        with:
          python-version: "3.11"
      - name: install requirements
        run: python -m pip install build twine
      - name: build dists
        run: python -m build
      - name: check package metadata
        run: twine check dist/*
      - name: publish
        run: twine upload -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} dist/*
